openapi: 3.0.1
info:
  title: Beeja Employee Service
  version: 1.0.0
  description: |-
    Product of tech.at.core
      API documentation for the Beeja Open API application. It allows users to access
      data via a APIs secured by cookie and permissions.
    
        ## Authentication & Authorization
        Beeja has a username and password authentication system. 
        [Please login to Beeja](http://localhost:8000/login) to access all APIs in Swagger.

externalDocs:
  description: Explore Beeja
  url: https://beeja.io/
servers:
  - url: http://localhost:8000/employee-management
    description: Beeja Employee Service

paths:
  /v1/users:
    get:
      summary: Get all employees
      operationId: getAllEmployees
      tags:
        - Employee Controller
      parameters:
        - name: department
          in: query
          description: Filter by department
          required: false
          schema:
            type: string
        - name: designation
          in: query
          description: Filter by designation
          required: false
          schema:
            type: string
        - name: employmentType
          in: query
          description: Filter by employment type
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by status (default is active)
          required: false
          schema:
            type: string
            default: active
        - name: pageNumber
          in: query
          description: Page number for pagination (default is 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Page size for pagination (default is 10)
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '400':
          description: Bad request
        '500':
          description: Internal server error

    post:
      summary: Create a new employee
      operationId: createEmployee
      tags:
        - Employee Controller
      requestBody:
        description: The employee data to create
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /v1/users/{employeeId}:
    get:
      summary: Get an employee by ID
      operationId: getEmployeeByEmployeeId
      tags:
        - Employee Controller
      parameters:
        - name: employeeId
          in: path
          required: true
          description: The ID of the employee to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad request
        '404':
          description: Employee not found
        '500':
          description: Internal server error

    put:
      summary: Update an employee by ID
      operationId: updateEmployee
      tags:
        - Employee Controller
      parameters:
        - name: employeeId
          in: path
          required: true
          description: The ID of the employee to update
          schema:
            type: string
      requestBody:
        description: Employee update data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateRequest'
      responses:
        '200':
          description: Employee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Bad request
        '404':
          description: Employee not found
        '500':
          description: Internal server error

  /v1/users/employee-values:
    get:
      summary: Get employee values
      operationId: getEmployeeValues
      tags:
        - Employee Controller
      responses:
        '200':
          description: Employee values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeValues'
        '500':
          description: Internal server error

  /v1/files:
    post:
      summary: Upload a new file
      operationId: uploadFile
      tags:
        - File Controller
      requestBody:
        description: File upload request
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - entityId
              properties:
                file:
                  type: string
                  format: binary
                entityId:
                  type: string
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /v1/files/{fileId}:
    delete:
      summary: Delete a file by ID
      operationId: deleteFileById
      tags:
        - File Controller
      parameters:
        - name: fileId
          in: path
          required: true
          description: The ID of the file to delete
          schema:
            type: string
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: Bad request
        '404':
          description: File not found
        '500':
          description: Internal server error

  /v1/files/download/{fileId}:
    get:
      summary: Download a file by ID
      operationId: downloadFileById
      tags:
        - File Controller
      parameters:
        - name: fileId
          in: path
          required: true
          description: The ID of the file to download
          schema:
            type: string
      responses:
        '200':
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
        '404':
          description: File not found
        '500':
          description: Internal server error

components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        department:
          type: string
        designation:
          type: string
        status:
          type: string

    EmployeeResponse:
      type: object
      properties:
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        total:
          type: integer

    EmployeeUpdateRequest:
      type: object
      properties:
        name:
          type: string
        department:
          type: string
        designation:
          type: string
        status:
          type: string

    UpdateKYCRequest:
      type: object
      properties:
        kycStatus:
          type: string

    EmployeeValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string

    File:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        size:
          type: integer

    FileResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
        total:
          type: integer