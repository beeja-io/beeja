version: "3.8"
services:
  beeja-service-registry:
    container_name: beeja-api-service-registry-service
    build: ./beeja-service-registry
    ports:
      - "8761:8761"
    env_file:
      - .env
  beeja-cloud-gateway:
    build: ./beeja-cloud-gateway
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - beeja-service-registry
      - beeja-db-1
  beeja-accounts:
    build: ./beeja-accounts
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - beeja-service-registry
      - beeja-cloud-gateway
      - beeja-db-1
  beeja-employee-management:
    build: ./beeja-employee-management
    env_file:
      - .env
    ports:
      - "8089:8089"
    depends_on:
      - beeja-service-registry
      - beeja-cloud-gateway
      - beeja-db-1
  beeja-expense:
    build: ./beeja-expense
    env_file:
      - .env
    ports:
      - "8091:8091"
    depends_on:
      - beeja-service-registry
      - beeja-cloud-gateway
      - beeja-db-1
  beeja-file-management:
    build: ./beeja-file-management
    env_file:
      - .env
    ports:
      - "8090:8090"
    depends_on:
      - beeja-service-registry
      - beeja-cloud-gateway
      - beeja-db-1

  beeja-finance:
    build: ./beeja-finance
    env_file:
      - .env
    ports:
      - "8092:8092"
    depends_on:
      - beeja-service-registry
      - beeja-cloud-gateway
      - beeja-db-1

  beeja-recruitment:
    build: ./beeja-recruitment
    env_file:
      - .env
    ports:
      - "8095:8095"
    depends_on:
      - beeja-service-registry
      - beeja-cloud-gateway
      - beeja-db-1
  beeja-db-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beeja-mongodb-replicaset
    image: mongo:latest
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--keyFile", "/opt/keyfile/mongo-keyfile" ]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 -u root -p password --authenticationDatabase admin
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - db-store:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js




volumes:
  db-store:





